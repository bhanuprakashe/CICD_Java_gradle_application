pipeline{
    agent any
    environment{
        VERSION = "${env.BUILD_ID}"
    }
    stages{
        stage("SONAR QUALITY CHECK"){
            agent {
                docker{
                    image 'openjdk:11'
                }
            }
            steps{
                script{
                    withSonarQubeEnv(credentialsId: 'sonar-token') {
                        sh 'chmod +x gradlew'
                        sh './gradlew sonarqube'
                    }
                    timeout(5) {
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                           error "Pipeline aborted due to quality gate failure: ${qg.status}"
                      }
                    }
                }
            }
        stage("DOCKER BUILD & PUSH"){
            steps{
                script{
                    withCredentials([string(credentialsId: 'nexus_pass', variable: 'nexus_password')]) {
                        sh '''
                        docker build -t 13.232.6.248:8083/springapp:${VERSION} .
                        docker login -u admin -p $nexus_password 10.0.2.139:8083
                        docker push 13.232.6.248:8083/springapp:${VERSION}
                        docker rmi 13.232.6.248:8083/springapp:${VERSION}
                        '''
                    }
                }
            }
        }
    }
}
